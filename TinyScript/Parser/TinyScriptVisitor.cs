//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from TinyScript.g4 by ANTLR 4.5.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="TinyScriptParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.2")]
[System.CLSCompliant(false)]
public interface ITinyScriptVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] TinyScriptParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] TinyScriptParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] TinyScriptParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.quoteExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuoteExpr([NotNull] TinyScriptParser.QuoteExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.blockStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockStatement([NotNull] TinyScriptParser.BlockStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.assignStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignStatement([NotNull] TinyScriptParser.AssignStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.declareStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclareStatement([NotNull] TinyScriptParser.DeclareStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.printStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintStatement([NotNull] TinyScriptParser.PrintStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] TinyScriptParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.doWhileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoWhileStatement([NotNull] TinyScriptParser.DoWhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] TinyScriptParser.ForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.commonExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommonExpression([NotNull] TinyScriptParser.CommonExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.assignAbleStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignAbleStatement([NotNull] TinyScriptParser.AssignAbleStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.declareExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclareExpression([NotNull] TinyScriptParser.DeclareExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] TinyScriptParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.andAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndAndExpression([NotNull] TinyScriptParser.AndAndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.cmpExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCmpExpression([NotNull] TinyScriptParser.CmpExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.addExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddExpression([NotNull] TinyScriptParser.AddExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.mulExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulExpression([NotNull] TinyScriptParser.MulExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpression([NotNull] TinyScriptParser.UnaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryExpression([NotNull] TinyScriptParser.PrimaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.variableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableExpression([NotNull] TinyScriptParser.VariableExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.basicType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBasicType([NotNull] TinyScriptParser.BasicTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.declarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclarators([NotNull] TinyScriptParser.DeclaratorsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssign([NotNull] TinyScriptParser.AssignContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TinyScriptParser.numericLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumericLiteral([NotNull] TinyScriptParser.NumericLiteralContext context);
}
